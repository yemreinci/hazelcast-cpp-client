name: CMake

on: [push]


jobs:
  build-unix:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        build_type: [Release]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Install system dependencies for Ubuntu
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt-get update
        sudo apt-get install net-tools

    - name: Install system dependencies for macOS
      if: ${{ runner.os == 'macOS' }}
      run: |
        brew install bison

    - uses: actions/checkout@v2

    - name: Cache vcpkg
      id: cache-vcpkg
      uses: actions/cache@v2
      with:
        path: vcpkg
        key: ${{ runner.os }}-vcpkg  # TODO this will probably need arch as well.

    # TODO freeze vcpkg version
    - name: Download vcpkg and install dependencies
      if: ${{ steps.cache-vcpkg.outputs.cache-hit != 'true' }}
      run: |
        git clone https://github.com/microsoft/vcpkg
        ./vcpkg/bootstrap-vcpkg.sh
        ./vcpkg/vcpkg install boost openssl thrift
        rm -rf ./vcpkg/buildtrees/ ./vcpkg/downloads

    - name: Build, Install, Test & Verify  # TODO separate this into steps
      env:
        BIT_VERSION: 64
        BUILD_TYPE: ${{ matrix.build_type }}
        LIBRARY_TYPE: SHARED
        WITH_OPENSSL: OFF
        COVERAGE: OFF
        TOOLCHAIN: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
        HAZELCAST_ENTERPRISE_KEY: ${{ secrets.HAZELCAST_ENTERPRISE_KEY }}
      run: ./scripts/do-all-unix.sh

  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache vcpkg
        id: cache-vcpkg
        uses: actions/cache@v2
        with:
          path: vcpkg
          key: ${{ runner.os }}-vcpkg  # TODO this will probably need arch as well.

      # TODO freeze vcpkg version
      - name: Download vcpkg and install dependencies
        if: ${{ steps.cache-vcpkg.outputs.cache-hit != 'true' }}
        run: |
          git clone https://github.com/microsoft/vcpkg
          ./vcpkg/bootstrap-vcpkg.sh
          ./vcpkg/vcpkg install boost openssl thrift
          rm -rf ./vcpkg/buildtrees/ ./vcpkg/downloads

      - name: Build, Install, Test & Verify  # TODO separate this into steps
        env:
          VCPKG_ROOT: ${{ github.workspace }}\vcpkg
          BIT_VERSION: 32
          BUILD_TYPE: Release
          LIBRARY_TYPE: SHARED
          WITH_OPENSSL: OFF
          TOOLCHAIN: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          HAZELCAST_ENTERPRISE_KEY: ${{ secrets.HAZELCAST_ENTERPRISE_KEY }}
        run: ./scripts/do-all-windows.bat
