name: CMake

on: [push]

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [Debug]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Install system dependencies for Ubuntu
      if: ${{ runner.os == 'Linux' }}
      # TODO remove net-tools if RC is in docker
      run: >
        sudo apt-get update &&
        sudo apt-get install net-tools

    - name: Install system dependencies for macOS
      if: ${{ runner.os == 'macOS' }}
      run: >
        brew install bison  # required for thrift

    - uses: actions/checkout@v2

    - name: Cache vcpkg
      id: cache-vcpkg
      uses: actions/cache@v2
      with:
        path: vcpkg
        key: ${{ runner.os }}-vcpkg # TODO will probably need arch as well.

    # TODO freeze vcpkg version
    # TODO only install necessary boost components as all of them takes quite a lot of cache space
    - name: Download vcpkg and install dependencies
      if: ${{ steps.cache-vcpkg.outputs.cache-hit != 'true' }}
      run: >
        git clone https://github.com/microsoft/vcpkg &&
        ./vcpkg/bootstrap-vcpkg.sh &&
        ./vcpkg/vcpkg install boost openssl thrift &&
        rm -rf ./vcpkg/buildtrees/ ./vcpkg/downloads

#
#    - name: Install Boost
#      run: > # make this a script or sth
#        wget --quiet https://dl.bintray.com/boostorg/release/1.75.0/source/boost_1_75_0.tar.bz2 &&
#        tar xjf boost_1_75_0.tar.bz2 &&
#        rm boost_1_75_0.tar.bz2 &&
#        cd boost_1_75_0 &&
#        ./bootstrap.sh &&
#        ./b2 address-model=64 --with-thread --with-chrono &&
#        sudo ./b2 address-model=64 --with-thread --with-chrono install &&
#        cd .. &&
#        sudo rm -rf boost_1_75_0

    - name: Create build directory
      run: cmake -E make_directory ${{ github.workspace }}/build

    - name: Configure
      working-directory: ${{ github.workspace }}/build
      run: |
        cmake .. -DCMAKE_TOOLCHAIN_FILE=../vcpkg/scripts/buildsystems/vcpkg.cmake \
                 -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}                      \
                 -DBUILD_TESTS=ON                                                 \
                 -DWITH_OPENSSL=ON

#
#    - name: Build
#      working-directory: ${{github.workspace}}/build
#      shell: bash
#      # Execute the build.  You can specify a specific target with "--target <NAME>"
#      run: cmake --build . --config $BUILD_TYPE --parallel
#
#    - name: Install
#      working-directory: ${{github.workspace}}/build
#      shell: bash
#      run: sudo cmake --build . --target install --config $BUILD_TYPE
#
#    - name: Start RC
#      working-directory: ${{github.workspace}}
#      shell: bash
#      env:
#        HAZELCAST_ENTERPRISE_KEY: ${{ secrets.HAZELCAST_ENTERPRISE_KEY }}
#      run: bash ./scripts/start-rc.sh
#
#    - name: Run tests
#      working-directory: ${{github.workspace}}
#      shell: bash
#      run: ./build/hazelcast/test/src/client_test